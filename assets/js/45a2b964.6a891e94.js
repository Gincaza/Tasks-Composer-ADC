"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[534],{5201:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introdu\xe7\xe3o","items":[{"type":"link","label":"Vis\xe3o Geral do Projeto","href":"/Tasks-Composer-ADC/overview","docId":"overview","unlisted":false},{"type":"link","label":"Estrutura do Projeto","href":"/Tasks-Composer-ADC/project-structure","docId":"project-structure","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Funcionalidades","items":[{"type":"link","label":"Models e seu Comportamento","href":"/Tasks-Composer-ADC/models","docId":"models","unlisted":false},{"type":"link","label":"Views e Funcionalidades","href":"/Tasks-Composer-ADC/views","docId":"views","unlisted":false},{"type":"link","label":"Fluxo do Usu\xe1rio","href":"/Tasks-Composer-ADC/user-flow","docId":"user-flow","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Testes","href":"/Tasks-Composer-ADC/tests","docId":"tests","unlisted":false},{"type":"link","label":"Autentica\xe7\xe3o e Autoriza\xe7\xe3o","href":"/Tasks-Composer-ADC/authentication-authorization","docId":"authentication-authorization","unlisted":false}]},"docs":{"authentication-authorization":{"id":"authentication-authorization","title":"Autentica\xe7\xe3o e Autoriza\xe7\xe3o","description":"O projeto Tasks Composer implementa um sistema de autentica\xe7\xe3o e autoriza\xe7\xe3o para garantir que apenas usu\xe1rios autenticados possam acessar determinadas funcionalidades. Abaixo est\xe3o os principais aspectos desse sistema:","sidebar":"tutorialSidebar"},"models":{"id":"models","title":"Models e seu Comportamento","description":"Os models no Django s\xe3o respons\xe1veis por definir a estrutura dos dados e como eles se comportam no banco de dados. No projeto Tasks Composer, os principais models s\xe3o:","sidebar":"tutorialSidebar"},"overview":{"id":"overview","title":"Vis\xe3o Geral do Projeto","description":"Tasks Composer \xe9 uma aplica\xe7\xe3o web desenvolvida para ajudar os usu\xe1rios a gerenciar suas tarefas de forma eficiente e organizada. Este projeto foi criado como parte da disciplina de Ambiente e Desenvolvimento Colaborativo da Universidade do Algarve.","sidebar":"tutorialSidebar"},"project-structure":{"id":"project-structure","title":"Estrutura do Projeto","description":"O projeto Tasks Composer est\xe1 organizado da seguinte forma:","sidebar":"tutorialSidebar"},"tests":{"id":"tests","title":"Testes","description":"O projeto Tasks Composer inclui testes automatizados para garantir a qualidade e o funcionamento correto das principais funcionalidades. Os testes est\xe3o localizados no arquivo core/tests.py e cobrem os seguintes aspectos:","sidebar":"tutorialSidebar"},"user-flow":{"id":"user-flow","title":"Fluxo do Usu\xe1rio","description":"Este documento descreve o fluxo de navega\xe7\xe3o que um usu\xe1rio pode percorrer manualmente no sistema.","sidebar":"tutorialSidebar"},"views":{"id":"views","title":"Views e Funcionalidades","description":"As views no Django s\xe3o respons\xe1veis por lidar com as requisi\xe7\xf5es e retornar respostas apropriadas. No projeto Tasks Composer.","sidebar":"tutorialSidebar"}}}}')}}]);